[
  {
    "objectID": "real-estate data.html",
    "href": "real-estate data.html",
    "title": "Real-estate",
    "section": "",
    "text": "Used packages\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "real-estate data.html#packages",
    "href": "real-estate data.html#packages",
    "title": "Real-estate",
    "section": "",
    "text": "Used packages\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "real-estate data.html#data-real-estate",
    "href": "real-estate data.html#data-real-estate",
    "title": "Real-estate",
    "section": "Data: real-estate",
    "text": "Data: real-estate\n\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nPrice\nSales price of residence (dollars)\n\n\nSqft\nFinished area of residence (square feet)\n\n\nBedroom\nTotal number of bedrooms in residence\n\n\nBathroom\nTotal number of bathrooms in residence\n\n\nAirconditioning\n1= Presence of air conditioning, 0= otherwise\n\n\nGarage\nNumber of cars that garage will hold\n\n\nPool\n1= Presence of Pool, 0= otherwise\n\n\nYearBuild\nyear of construction\n\n\nQuality\n1= high quality, 2 = medium, 3 = low\n\n\nLot\nLot size (square feet)\n\n\nAdjHighway\n1 if the property is adjacent to a highway, 0 otherwise"
  },
  {
    "objectID": "real-estate data.html#structure-of-the-data",
    "href": "real-estate data.html#structure-of-the-data",
    "title": "Real-estate",
    "section": "Structure of the Data",
    "text": "Structure of the Data\n\nreal&lt;-read.csv(\"C:\\\\Users\\\\arpan\\\\Documents\\\\data\\\\real-estate.csv\")\nreal&lt;-real[,-1] #---removing ID\nfor(i in c(5,7,9,11))real[,i]&lt;-as.factor(real[,i])\nstr(real)\n\n'data.frame':   522 obs. of  11 variables:\n $ Price          : int  360000 340000 250000 205500 275500 248000 229900 150000 195000 160000 ...\n $ Sqft           : int  3032 2058 1780 1638 2196 1966 2216 1597 1622 1976 ...\n $ Bedroom        : int  4 4 4 4 4 4 3 2 3 3 ...\n $ Bathroom       : int  4 2 3 2 3 3 2 1 2 3 ...\n $ Airconditioning: Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 2 2 2 2 2 1 ...\n $ Garage         : int  2 2 2 2 2 5 2 1 2 1 ...\n $ Pool           : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 1 1 ...\n $ YearBuild      : int  1972 1976 1980 1963 1968 1972 1972 1955 1975 1918 ...\n $ Quality        : Factor w/ 3 levels \"1\",\"2\",\"3\": 2 2 2 2 2 2 2 2 3 3 ...\n $ Lot            : int  22221 22912 21345 17342 21786 18902 18639 22112 14321 32358 ...\n $ AdjHighway     : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ..."
  },
  {
    "objectID": "real-estate data.html#full-model",
    "href": "real-estate data.html#full-model",
    "title": "Real-estate",
    "section": "Full model",
    "text": "Full model\n\nfm&lt;-lm(Price~.,data=real)\nsummary(fm)\n\n\nCall:\nlm(formula = Price ~ ., data = real)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-204865  -28010   -4973   21315  298892 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -2.358e+06  3.991e+05  -5.909 6.29e-09 ***\nSqft              8.700e+01  6.570e+00  13.242  &lt; 2e-16 ***\nBedroom          -5.125e+03  3.275e+03  -1.565   0.1182    \nBathroom          8.127e+03  4.288e+03   1.895   0.0586 .  \nAirconditioning1  4.851e+03  8.086e+03   0.600   0.5488    \nGarage            1.089e+04  5.060e+03   2.152   0.0319 *  \nPool1             1.014e+04  1.040e+04   0.975   0.3303    \nYearBuild         1.269e+03  2.024e+02   6.272 7.60e-10 ***\nQuality2         -1.430e+05  1.021e+04 -14.007  &lt; 2e-16 ***\nQuality3         -1.484e+05  1.404e+04 -10.564  &lt; 2e-16 ***\nLot               1.556e+00  2.363e-01   6.587 1.12e-10 ***\nAdjHighway1      -2.737e+04  1.810e+04  -1.512   0.1311    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 58770 on 510 degrees of freedom\nMultiple R-squared:  0.8223,    Adjusted R-squared:  0.8184 \nF-statistic: 214.5 on 11 and 510 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "real-estate data.html#olderhouse-tends-to-lower-price",
    "href": "real-estate data.html#olderhouse-tends-to-lower-price",
    "title": "Real-estate",
    "section": "olderhouse tends to lower price?",
    "text": "olderhouse tends to lower price?\n\nggplot(data=real,aes(x=YearBuild,y=Price))+\ngeom_point(col='tomato')+ labs(caption='Data=real-estate')"
  },
  {
    "objectID": "real-estate data.html#how-much-adjancey-to-highway-affects-the-price.",
    "href": "real-estate data.html#how-much-adjancey-to-highway-affects-the-price.",
    "title": "Real-estate",
    "section": "How much adjancey to highway affects the price.",
    "text": "How much adjancey to highway affects the price.\n\nggplot(data=real,aes(x=AdjHighway,y=Price,colour=AdjHighway))+\ngeom_boxplot()+ labs(caption='Data=real-estate')"
  },
  {
    "objectID": "real-estate data.html#age",
    "href": "real-estate data.html#age",
    "title": "Real-estate",
    "section": "Age?",
    "text": "Age?\n\ng&lt;-ggplot(data=real,aes(x=YearBuild,y=Price,colour=AdjHighway))+\n  geom_point()+\n  labs(caption='Data=real-estate',title='Price with Age') \ng"
  },
  {
    "objectID": "real-estate data.html#price-vs-sqft-with-quality",
    "href": "real-estate data.html#price-vs-sqft-with-quality",
    "title": "Real-estate",
    "section": "Price vs Sqft with Quality",
    "text": "Price vs Sqft with Quality\n\n#---plot | Quality\nggplot(data=real,aes(x=Sqft,y=Price,colour=Quality))+\ngeom_point()+ labs(caption='Data=real-estate',title='Scatterplot with Quality')"
  },
  {
    "objectID": "real-estate data.html#price-airconditioning-vs-non-airconditioning",
    "href": "real-estate data.html#price-airconditioning-vs-non-airconditioning",
    "title": "Real-estate",
    "section": "Price: Airconditioning vs Non Airconditioning",
    "text": "Price: Airconditioning vs Non Airconditioning\n\nggplot(data=real,aes(x=Airconditioning,y=Price,colour=Airconditioning))+\ngeom_boxplot()+ labs(caption='Data=real-estate')"
  },
  {
    "objectID": "real-estate data.html#testing",
    "href": "real-estate data.html#testing",
    "title": "Real-estate",
    "section": "Testing",
    "text": "Testing\n\nac&lt;-real$Price[real$Airconditioning=='1']\nnonac&lt;-real$Price[real$Airconditioning=='0']\nt.test(ac,nonac,var.equal = TRUE,alternative='greater')\n\n\n    Two Sample t-test\n\ndata:  ac and nonac\nt = 6.8735, df = 520, p-value = 9.001e-12\nalternative hypothesis: true difference in means is greater than 0\n95 percent confidence interval:\n 80753.86      Inf\nsample estimates:\nmean of x mean of y \n 295800.6  189583.0"
  },
  {
    "objectID": "real-estate data.html#model-assumptions-of-the-full-model",
    "href": "real-estate data.html#model-assumptions-of-the-full-model",
    "title": "Real-estate",
    "section": "Model Assumptions of the Full Model",
    "text": "Model Assumptions of the Full Model\n\nErrors have mean zero.\nErrors are Homoscedastic.\nErrors are uncorrelated.\nErrors are Normally distributed."
  },
  {
    "objectID": "real-estate data.html#residual-vs-fitted",
    "href": "real-estate data.html#residual-vs-fitted",
    "title": "Real-estate",
    "section": "Residual vs Fitted",
    "text": "Residual vs Fitted\n\nresiduals&lt;-residuals(fm)\nfitted&lt;-fitted.values(fm)\nggplot()+geom_point(aes(x=fitted,y=residuals),col='tomato')+\n  geom_hline(yintercept = 0,col='navy')"
  },
  {
    "objectID": "real-estate data.html#normality-checking",
    "href": "real-estate data.html#normality-checking",
    "title": "Real-estate",
    "section": "Normality Checking",
    "text": "Normality Checking\n\nggplot()+stat_qq(aes(sample=residuals),col='tomato')+\n  stat_qq_line( aes(sample=residuals),col='navy')"
  },
  {
    "objectID": "BVN.html",
    "href": "BVN.html",
    "title": "gems bond",
    "section": "",
    "text": "## Bivariate Normal sample generator\n\nBVN&lt;-function(size,mu1=0,mu2=0,sd1=1,sd2=1,rho=0){\n  stopifnot(exprs = {\n    sd1&gt;0\n    sd2&gt;0\n    -1&lt;=rho \n    rho&lt;=1} ,local = TRUE)\n  \n  z&lt;-rnorm(n=2*size)\n  sample.mat&lt;-matrix(z,ncol=2)\n  std.y&lt;-apply(sample.mat,1,simplify = TRUE ,FUN = function(z){\n    y&lt;-(rho*z[1])+(sqrt(1-rho)*z[2])\n    return(y)\n    })\n\n  x&lt;-mu1+(sample.mat[,1]*sd1)\n  y&lt;-mu2+(std.y*sd2)\n\ncbind(x,y)}\n\nsam&lt;-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))\n\nplot(sam)"
  },
  {
    "objectID": "BVN.html#bivariate-normal-sample-generator",
    "href": "BVN.html#bivariate-normal-sample-generator",
    "title": "gems bond",
    "section": "",
    "text": "## Bivariate Normal sample generator\n\nBVN&lt;-function(size,mu1=0,mu2=0,sd1=1,sd2=1,rho=0){\n  stopifnot(exprs = {\n    sd1&gt;0\n    sd2&gt;0\n    -1&lt;=rho \n    rho&lt;=1} ,local = TRUE)\n  \n  z&lt;-rnorm(n=2*size)\n  sample.mat&lt;-matrix(z,ncol=2)\n  std.y&lt;-apply(sample.mat,1,simplify = TRUE ,FUN = function(z){\n    y&lt;-(rho*z[1])+(sqrt(1-rho)*z[2])\n    return(y)\n    })\n\n  x&lt;-mu1+(sample.mat[,1]*sd1)\n  y&lt;-mu2+(std.y*sd2)\n\ncbind(x,y)}\n\nsam&lt;-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))\n\nplot(sam)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Welcome to my blog",
    "section": "",
    "text": "hellow! This is my blog page. I will upload some interesting things in this page.\n1.Bivariate Normal Sample Generator\n2.Analysis of Real-estate dataset Authors: soumyajit, sourav and me"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "arpan",
    "section": "",
    "text": "Studying MStat, ISI Delhi\nStudied BSc in Statistics from Presidency University,Kolkata"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "arpan",
    "section": "",
    "text": "Studying MStat, ISI Delhi\nStudied BSc in Statistics from Presidency University,Kolkata"
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "arpan",
    "section": "Skills",
    "text": "Skills\nR Python Latex Quarto"
  }
]