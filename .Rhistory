BVN\<-function(size,mu1=0,mu2=0,sd1=1,sd2=1,rho=0){ stopifnot(exprs = { sd1\>0 sd2\>0 -1\<=rho rho\<=1} ,local = TRUE)
## Bivariate Normal sample generator
BVN<-function(size,mu1=0,mu2=0,sd1=1,sd2=1,rho=0){
stopifnot(exprs = {
sd1>0
sd2>0
-1<=rho
rho<=1} ,local = TRUE)
z<-rnorm(n=2*size)
sample.mat<-matrix(z,ncol=2)
std.y<-apply(sample.mat,1,simplify = TRUE ,FUN = function(z){
y<-(rho*z[1])+(sqrt(1-rho)*z[2])
return(y)
})
x<-mu1+(sample.mat[,1]*sd1)
y<-mu2+(std.y*sd2)
cbind(x,y)}
sam<-BVN(size=50,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
cov(sam)
plot(sam)
## Bivariate Normal sample generator
BVN<-function(size,mu1=0,mu2=0,sd1=1,sd2=1,rho=0){
stopifnot(exprs = {
sd1>0
sd2>0
-1<=rho
rho<=1} ,local = TRUE)
z<-rnorm(n=2*size)
sample.mat<-matrix(z,ncol=2)
std.y<-apply(sample.mat,1,simplify = TRUE ,FUN = function(z){
y<-(rho*z[1])+(sqrt(1-rho)*z[2])
return(y)
})
x<-mu1+(sample.mat[,1]*sd1)
y<-mu2+(std.y*sd2)
cbind(x,y)}
sam<-BVN(size=50,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
plot(sam)
## Bivariate Normal sample generator
BVN<-function(size,mu1=0,mu2=0,sd1=1,sd2=1,rho=0){
stopifnot(exprs = {
sd1>0
sd2>0
-1<=rho
rho<=1} ,local = TRUE)
z<-rnorm(n=2*size)
sample.mat<-matrix(z,ncol=2)
std.y<-apply(sample.mat,1,simplify = TRUE ,FUN = function(z){
y<-(rho*z[1])+(sqrt(1-rho)*z[2])
return(y)
})
x<-mu1+(sample.mat[,1]*sd1)
y<-mu2+(std.y*sd2)
cbind(x,y)}
sam<-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
plot(sam)
BVN<-function(size,mu1=0,mu2=0,sd1=1,sd2=1,rho=0){
stopifnot(exprs = {
sd1>0
sd2>0
-1<=rho
rho<=1} ,local = TRUE)
z<-rnorm(n=2*size)
sample.mat<-matrix(z,ncol=2)
std.y<-apply(sample.mat,1,simplify = TRUE ,FUN = function(z){
y<-(rho*z[1])+(sqrt(1-rho)*z[2])
return(y)
})
x<-mu1+(sample.mat[,1]*sd1)
y<-mu2+(std.y*sd2)
cbind(x,y)}
sam<-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
plot(sam)
BVN<-function(size,mu1=0,mu2=0,sd1=1,sd2=1,rho=0){
stopifnot(exprs = {
sd1>0
sd2>0
-1<=rho
rho<=1} ,local = TRUE)
z<-rnorm(n=2*size)
sample.mat<-matrix(z,ncol=2)
std.y<-apply(sample.mat,1,simplify = TRUE ,FUN = function(z){
y<-(rho*z[1])+(sqrt(1-rho)*z[2])
return(y)
})
x<-mu1+(sample.mat[,1]*sd1)
y<-mu2+(std.y*sd2)
cbind(x,y)}
sam<-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
plot(sam)
sam<-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
plot(sam)
sam<-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
plot(sam,pch=20)
sam<-BVN(size=input(),rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
sam<-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
plot(sam,pch=20,)
sam<-BVN(size=500,rho=-0.73,mu1=0.5,mu2=1.8,sd2=sqrt(2))
plot(sam,pch=20,col='lightgreen')
